"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[648],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(u,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(h,i(i({ref:t},l),{},{components:n})):a.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),o=n(6010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),o=n(7294),r=n(6010),i=n(2466),s=n(6550),u=n(1980),c=n(7392),l=n(12);function d(e){return function(e){return o.Children.map(e,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=p(e),[i,s]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[u,c]=h({queryString:n,groupId:a}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,l.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),f=(()=>{const e=u??d;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),g(e)}),[c,g,r]),tabValues:r}}var f=n(2389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:s,selectValue:u,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=l.indexOf(t),a=c[n].value;a!==s&&(d(t),u(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>l.push(e),onKeyDown:m,onClick:p},i,{className:(0,r.Z)("tabs__item",y.tabItem,i?.className,{"tabs__item--active":s===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=g(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",y.tabList)},o.createElement(b,(0,a.Z)({},e,t)),o.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,f.Z)();return o.createElement(k,(0,a.Z)({key:String(t)},e))}},8598:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=n(7462),o=(n(7294),n(3905)),r=n(4866),i=n(5162);const s={sidebar_position:1},u="Administrator guide",c={unversionedId:"guides/administrators",id:"guides/administrators",title:"Administrator guide",description:"This page will provide guidance for administrators to help add configurations and settings to your source control tools to prevent unwanted access, and require the use of commit signing.",source:"@site/docs/guides/administrators.mdx",sourceDirName:"guides",slug:"/guides/administrators",permalink:"/secure-software-supply-chain-guide/docs/guides/administrators",draft:!1,editUrl:"https://github.com/YubicoLabs/secure-software-supply-chain-guide/tree/main/docs/docs/guides/administrators.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Role based guides",permalink:"/secure-software-supply-chain-guide/docs/guides"},next:{title:"Developer guide",permalink:"/secure-software-supply-chain-guide/docs/guides/developers"}},l={},d=[{value:"Overview",id:"overview",level:2},{value:"Account protection",id:"account-protection",level:2},{value:"Enforce 2FA on your administrator account",id:"enforce-2fa-on-your-administrator-account",level:3},{value:"Enforce 2FA in your organization",id:"enforce-2fa-in-your-organization",level:3},{value:"Communicate your organization\u2019s preference for Security Keys",id:"communicate-your-organizations-preference-for-security-keys",level:3},{value:"Commit signing",id:"commit-signing",level:2},{value:"Enforce branch protection rules",id:"enforce-branch-protection-rules",level:3}],p={toc:d},m="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"administrator-guide"},"Administrator guide"),(0,o.kt)("p",null,"This page will provide guidance for administrators to help add configurations and settings to your source control tools to prevent unwanted access, and require the use of commit signing."),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The administrator refers to any person/organization responsible for overseeing and owning the source control tools where your code is managed. This can range from a single developer looking to protect their personal repository, or large enterprises with a team dedicated to managing developer tools."),(0,o.kt)("p",null,"This page will provide guidance on how to enable MFA and commit signing on GitHub and GitLab."),(0,o.kt)("p",null,"While the guidance on this page isn\u2019t specific to YubiKeys, it will lay the foundations to allow your developers to leverage their security keys for seamless authentication and commit signing."),(0,o.kt)("h2",{id:"account-protection"},"Account protection"),(0,o.kt)("p",null,"We will start by enabling account protection in your source control tool. The main idea is to ",(0,o.kt)("strong",{parentName:"p"},"not")," allow your users to use traditional forms of authentication that are prone to phishing attacks. You will want to require the use of two-factor or multi-factor authentication to access accounts"),(0,o.kt)("h3",{id:"enforce-2fa-on-your-administrator-account"},"Enforce 2FA on your administrator account"),(0,o.kt)(r.Z,{groupId:"source-control-type",className:"my_tabs",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"GitHub",label:"GitHub",default:!0,mdxType:"TabItem"},(0,o.kt)("admonition",{title:"Security keys vs passkeys",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"GitHub allows you to leverage authentication through either a passkey or security key as 2FA. YubiKeys do support passkeys in the form of a device-bound discoverable credential. It's up to your security policy to decide which preference you have for your users, as YubiKeys will support both options."),(0,o.kt)("p",{parentName:"admonition"},"Yubico generally recommends to generate a passkey on a YubiKey as it enables passwordless login, and removes the need to utilize a passkey")),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://docs.github.com/en/authentication/authenticating-with-a-passkey/managing-your-passkeys"},"Managing your passkeys")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://docs.github.com/en/authentication/securing-your-account-with-two-factor-authentication-2fa/configuring-two-factor-authentication#configuring-two-factor-authentication-using-a-security-key"},"Configuring two-factor authentication using a security key")))),(0,o.kt)(i.Z,{value:"GitLab",label:"GitLab",mdxType:"TabItem"},(0,o.kt)("a",{href:"https://docs.gitlab.com/ee/user/profile/account/two_factor_authentication.html#set-up-a-webauthn-device"},"Set up a WebAuthn device"))),(0,o.kt)("p",null,"Once the security key is added, you'll be prompted when you attempt to access your account depending on the option selected above."),(0,o.kt)(r.Z,{groupId:"source-control-type",className:"my_tabs",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"GitHub",label:"GitHub",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/authenticating-with-a-passkey/signing-in-with-a-passkey"},"Signing in with a passkey")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/securing-your-account-with-two-factor-authentication-2fa/accessing-github-using-two-factor-authentication#using-a-security-key"},"Using a security key"))),(0,o.kt)(i.Z,{value:"GitLab",label:"GitLab",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/user/profile/account/two_factor_authentication.html#sign-in-using-a-webauthn-device"},"Sign in using a WebAuthn device")))),(0,o.kt)("h3",{id:"enforce-2fa-in-your-organization"},"Enforce 2FA in your organization"),(0,o.kt)(r.Z,{groupId:"source-control-type",className:"my_tabs",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"GitHub",label:"GitHub",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-two-factor-authentication-for-your-organization/requiring-two-factor-authentication-in-your-organization#requiring-two-factor-authentication-in-your-organization"},"Requiring two-factor authentication in your organization"))),(0,o.kt)(i.Z,{value:"GitLab",label:"GitLab",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/user/profile/account/two_factor_authentication.html#enable-two-factor-authentication"},"Enable two-factor authentication")))),(0,o.kt)("admonition",{title:"Ensure you understand the effects of changing this setting",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Before you require the use of 2FA in your source control tool, ensure that you understand how this will affect you and your users. For instance, your tool may remove all members in your organization who do not have a 2FA factor enabled.")),(0,o.kt)("h3",{id:"communicate-your-organizations-preference-for-security-keys"},"Communicate your organization\u2019s preference for Security Keys"),(0,o.kt)("p",null,"Both of the tools listed above allow for the user to select a variety of different traditional 2FA methods, such as an authenticator app, or SMS OTP. Ensure that you clearly articulate to developers in your organization that they should be enrolling their YubiKey as their 2FA method."),(0,o.kt)("p",null,"Some tools may allow you to view event/audit logs to see 2FA enrollment events. This will allow you to ensure that users are enrolling security keys vs enrolling other 2FA types."),(0,o.kt)("h2",{id:"commit-signing"},"Commit signing"),(0,o.kt)("p",null,"Next let\u2019s dive into steps that administrators can take to ensure that users are required to submit commits that have been cryptographically signed by a trusted source. This will be done by enforcing branch protection rules on a specific repository."),(0,o.kt)("p",null,"We are focused on enforcing branch protection rules that require commit signing, but you should also take the opportunity to add other requirements such as requiring pull requests and approvals for your main branch."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Requiring commit signing is a tactic that works well for developers in a contained ecosystem, such as an organization. In these cases, a security team, or admin, is able to communicate and enforce commit signing based on internal mandates or requirements. The keys are also correlated to trusted internal accounts that are owned, and managed by the organization."),(0,o.kt)("p",{parentName:"admonition"},"Commit signing may not work well in an open ecosystem, such as an open-source project being built by an anonymous population. Open-source contributors will be utilizing accounts not part of your organization, therefore the signed commit doesn't provide the assurance that the code came from a trustworthy source. In this case you should focus on requiring high assurance MFA of your administrators who are able to merge the pull requests from anonymous accounts into the main branch.")),(0,o.kt)("h3",{id:"enforce-branch-protection-rules"},"Enforce branch protection rules"),(0,o.kt)(r.Z,{groupId:"source-control-type",className:"my_tabs",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"GitHub",label:"GitHub",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/managing-a-branch-protection-rule#creating-a-branch-protection-rule"},"Create a branch protection rule"))),(0,o.kt)(i.Z,{value:"GitLab",label:"GitLab",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/user/project/repository/push_rules.html#prevent-unintended-consequences"},"Reject unsigned commits")))),(0,o.kt)("p",null,"Note that signing commits will require that your developers generate either SSH or GPG keys using their YubiKeys. The next page, ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/developers"},"Developer guide"),", will cover the steps needed to add signing keys to a developers account in more detail. It\u2019s also important for administrators to ensure that developer machines have the tools needed to help in the generation of signing keys."))}h.isMDXComponent=!0}}]);